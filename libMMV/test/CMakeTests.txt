cmake_minimum_required(VERSION 2.8)

include(CommonFlags)
include(GetSourceFiles)
include(PrecompiledHeaders)
include(Cpp11)
include(CopyDLLs)

SwitchOnCpp11()

add_definitions(/D_USE_MATH_DEFINES)
add_definitions(/DTESTDATA_DIR=\"${CMAKE_CURRENT_SOURCE_DIR}\")

# find all directories containing project files
set(FILE_TYPES *.c *.cpp *.h *.hpp)
find_directories(DIRS ${TEST_SOURCE_DIR} "${FILE_TYPES}")
# generate source tree
generate_source_tree(HOST_SOURCES "${DIRS}" "${FILE_TYPES}")

set(MMV_TEST_INCLUDE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/src")

# set include directories
include_directories("${MMV_TEST_INCLUDE_DIR}"
					"${GTEST_INCLUDE_DIR}"
					"${MEMORYMANAGER_INCLUDE_DIR}"
					"${LIBMMV_INCLUDE_DIR}"
					"${FREEIMAGE_INCLUDE_DIR}"
					)

source_group("Console sources" FILES ${SOURCES_CONSOLEAPP})

add_executable(${PROJECT_NAME}
			   ${HOST_SOURCES}
)

target_link_libraries(${PROJECT_NAME}
			libMMV
			${GTEST_BOTH_LIBRARIES}
			)

if(CMAKE_COMPILER_IS_GNUCC)
	target_link_libraries(${PROJECT_NAME} pthread)
endif(CMAKE_COMPILER_IS_GNUCC)

add_precompiled_header(${PROJECT_NAME} stdafx.h)

CopyDlls()